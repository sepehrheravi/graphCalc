#include "my_vector.h"
#include <iostream>

using namespace std;

void test_Vector()
{

//   cout << "==============Testing Default CTOR=============" << endl;
//   cout << endl;
//     Vector <int> v1;
//    cout << endl << "v1: " << v1 << endl;
//    cout << "Size: " << v1.get_size()<< endl;
//    cout << "Capacity: " << v1.get_capacity()<< endl;

//    cout << "==============Testing Init Vector=============" << endl;
//     Vector <int> v1;
//    v1.set_size(10);
//    v1.init_Vector(v1.get_size(), 88);
//    cout << endl << v1 << endl;
//    cout << "Size: " << v1.get_size()<< endl;
//    cout << "Capacity: " << v1.get_capacity()<< endl;

//    cout << "==============Testing Big Three=============" << endl;

//     Vector <char> v1;

//    v1.push_back('a');
//    v1.push_back('b');
//    v1.push_back('c');
//    v1.push_back('d');
//    v1.push_back('e');
//    v1.push_back('f');
//     Vector<int>  v3, v4;
//     Vector <char> v2(v1);


//     v3.push_back(1);
//     v3.push_back(2);
//     v3.push_back(3);
//     v3.push_back(4);
//     v4 = v3;
//     cout << endl << "v1: " << v1 << endl;
//     cout << "v1 Size: " << v1.get_size()<< endl;
//     cout << "v1 Capacity: " << v1.get_capacity()<< endl;
//     cout << endl << "v2: " << v2 << endl;
//     cout << "v2 Size: " << v2.get_size()<< endl;
//     cout << "v2 Capacity: " << v2.get_capacity()<< endl;
//     cout << endl << "v3: " << v3 << endl;
//     cout << "v3 Size: " << v3.get_size()<< endl;
//     cout << "v3 Capacity: " << v3.get_capacity()<< endl;
//     cout << endl << "v4: " << v4 << endl;
//     cout << "v4 Size: " << v4.get_size()<< endl;
//     cout << "v4 Capacity: " << v4.get_capacity()<< endl;

   cout << "==========Testing Vectror Functions==========" << endl;
   cout << endl;
    Vector<int> v;
    cout << "Initial Size of v: " << v.get_size()<< endl;
    cout << "Initial Capacity of v: " << v.get_capacity()<< endl;
    cout << "-------------------------------------------" << endl;
    v.set_capacity(5);
    cout << "Set capacity to 5" << endl;
    cout << "Size: " << v.get_size()<< endl;
    cout << "Capacity: " << v.get_capacity()<< endl;
    cout << "-------------------------------------------" << endl;
    v.push_back(2);
    v.push_back(3);
    v.push_back(4);
    v.push_back(5);
    v.push_back(6);
    v.push_back(7);
    cout << "Push back 2 - 7 into Vector: " << endl;
    cout << endl << "v: " << v;
    cout << "Size: " << v.get_size()<< endl;
    cout << "Capacity: " << v.get_capacity()<< endl;
    cout << "-------------------------------------------" << endl;
    v.pop_back();
    cout << "After pop_back: " << endl;
    cout << endl << "v: " << v;
    cout << "Size: " << v.get_size()<< endl;
    cout << "Capacity: " << v.get_capacity()<< endl;
    cout << "-------------------------------------------" << endl;
    v += 9;
    cout << "After using += operator for 9: " << endl;
    cout << endl << "v: " << v;
    cout << "Size: " << v.get_size()<< endl;
    cout << "Capacity: " << v.get_capacity()<< endl;
    cout << "-------------------------------------------" << endl;
    cout << "Show first and last element in Vector: " << endl;
    cout << endl << "v: " << v;
    cout << "First element: " << v.front() << endl;
    cout << "Last element: " << v.back() << endl;
    cout << "-------------------------------------------" << endl;
    v.set_size(12,10);
    cout << "After set size to 12:" << endl;
    cout << endl << "v: " << v;
    cout << "Size: " << v.get_size()<< endl;
    cout << "Capacity: " << v.get_capacity()<< endl;
    cout << "-------------------------------------------" << endl;
    v[11] = 8;
    v.at(0) = 44;
    cout << "After v[11] = 8 and v.at(0) = 44: " << endl;
    cout << endl << "v: " << v;
    cout << "Size: " << v.get_size()<< endl;
    cout << "Capacity: " << v.get_capacity()<< endl;
    cout << "v[7]: " << v[7] << endl;
    cout << "v.at(4): " << v.at(4) << endl;
    cout << "-------------------------------------------" << endl;
    v.insert(1, 100);
    cout << "After using insert 100 at index [1]: " << endl;
    cout << endl << "v: " << v;
    cout << "Size: " << v.get_size()<< endl;
    cout << "Capacity: " << v.get_capacity()<< endl;
    cout << "-------------------------------------------" << endl;
    v.erase(2);
    cout << "After using erase item at index [2]: " << endl;
    cout << endl << "v: " << v;
    cout << "Size: " << v.get_size()<< endl;
    cout << "Capacity: " << v.get_capacity()<< endl;
    cout << "-------------------------------------------" << endl;
    cout << "Display index of an item: " << endl;
    cout << endl << "v: " << v;
    cout << "Display index of 100: " << v.index_of(100) << endl;
    cout << "-------------------------------------------" << endl;

//    cout << "========Testing size and capacity errors======" << endl;
//    cout << endl;
//    Vector<int> v;

//    cout << "Initial Size: " << v.get_size()<< endl;
//    cout << "Initial Capacity: " << v.get_capacity()<< endl;
//    cout << "-------------------------------------------" << endl;
//    cout << "After setting size to 20" << endl;
//    v.set_size(20);
//    cout << "Size: " << v.get_size()<< endl;
//    cout << "Capacity: " << v.get_capacity()<< endl;
//    cout << "-------------------------------------------" << endl;
//    cout << "After setting capacity to 10" << endl;
//    v.set_capacity(10);
//    cout << "Size: " << v.get_size()<< endl;
//    cout << "Capacity: " << v.get_capacity()<< endl;
//    cout << "-------------------------------------------" << endl;

//    cout << "========Testing errors for [] and at=========" << endl;
//    cout << endl;
//    Vector<int> v;
//    v.push_back(2);
//    v.push_back(3);
//    v.push_back(4);
//    v.push_back(5);
//    v.push_back(6);
//    v.push_back(7);
//    cout << endl << "v: " << v;
//    cout << "Size: " << v.get_size()<< endl;
//    cout << "Capacity: " << v.get_capacity()<< endl;
//    cout << "-------------------------------------------" << endl;
//    cout << "After look for element in pos out of size " << endl;
//    v[8] = 100;
//    cout << "-------------------------------------------" << endl;
//    cout << "==========Testing errors for insert ========" << endl;
//    cout << endl;
//    Vector<int> v;
//    v.push_back(2);
//    v.push_back(3);
//    v.push_back(4);
//    v.push_back(5);
//    v.push_back(6);
//    v.push_back(7);
//    cout << endl << "v: " << v;
//    cout << "Size: " << v.get_size()<< endl;
//    cout << "Capacity: " << v.get_capacity()<< endl;
//    cout << "-------------------------------------------" << endl;
//    cout << "After insert element in pos out of size " << endl;
//    v.insert(10,88);
//    cout << endl << "v: " << v;
//    cout << "Size: " << v.get_size()<< endl;
//    cout << "Capacity: " << v.get_capacity()<< endl;
//    cout << "=========Testing errors for remove ============" << endl;
//    cout << endl;
//    Vector<int> v;
//    v.push_back(2);
//    v.push_back(3);
//    v.push_back(4);
//    v.push_back(5);
//    v.push_back(6);
//    v.push_back(7);
//    cout << endl << "v: " << v;
//    cout << "Size: " << v.get_size()<< endl;
//    cout << "Capacity: " << v.get_capacity()<< endl;
//    cout << "-------------------------------------------" << endl;
//    cout << "After erase element in pos out of size " << endl;
//    v.erase(8);
//    cout << endl << "v: " << v;
//    cout << "Size: " << v.get_size()<< endl;
//    cout << "Capacity: " << v.get_capacity()<< endl;
//    cout << "=========Testing errors for index_of ============" << endl;
//    cout << endl;
//    Vector<int> v;
//    v.push_back(2);
//    v.push_back(3);
//    v.push_back(4);
//    v.push_back(5);
//    v.push_back(6);
//    v.push_back(7);
//    cout << endl << "v: " << v;
//    cout << "Size: " << v.get_size()<< endl;
//    cout << "Capacity: " << v.get_capacity()<< endl;
//    cout << "-------------------------------------------" << endl;
//    cout << "After enter element that does not exist" << endl;
//    cout << v.index_of(10);
//    cout << "=========Testing function empty ============" << endl;
//    cout << endl;
//    Vector<int> v;
//    if(v.empty()) cout << "Vector is empty" << endl;
//    v.push_back(2);
//    v.push_back(3);
//    v.push_back(4);
//    v.push_back(5);
//    v.push_back(6);
//    v.push_back(7);
//    cout << "-------------------------------------------" << endl;
//    cout << "After put elemtns in Vector:" << endl;
//    cout << "v: " << v << endl;
//    if(!v.empty()) cout << "Vector is not empty" << endl;
//    cout << "================VECTOR STRING ================" << endl;
//    cout << endl;
//    Vector<string> v;

//    v.push_back("Mike");
//    v.push_back("Peter");
//    v.push_back("David");
//    v.push_back("Sarah");
//    v.push_back("Daniel");
//    v.push_back("Alexandra");

//    cout << "After put elemtns in Vector:" << endl;
//    cout << "v: " << v << endl;

}
